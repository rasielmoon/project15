STIL 1.0 { Design 2005; }
Header {
   Title "  TetraMAX (TM)  C-2009.06-i090521_205411 STIL output";
   Date "Tue Nov 24 16:21:41 2015";
   Source "Minimal STIL for design `b04'";
   History {
      Ann {*  Tue Nov 24 16:21:38 2015  *}
      Ann {*  DFT Compiler F-2011.09-SP3  *}
      Ann {*   Uncollapsed Transition Fault Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* fault class                     code   #faults *}
      Ann {* ------------------------------  ----  --------- *}
      Ann {* Detected                         DT       1178 *}
      Ann {*   detected_by_simulation         DS       (906) *}
      Ann {*   detected_by_implication        DI       (272) *}
      Ann {* Possibly detected                PT         15 *}
      Ann {*   atpg_untestable-pos_detected   AP         (2) *}
      Ann {*   not_analyzed-pos_detected      NP        (13) *}
      Ann {* Undetectable                     UD         19 *}
      Ann {*   undetectable-tied              UT         (8) *}
      Ann {*   undetectable-blocked           UB         (4) *}
      Ann {*   undetectable-redundant         UR         (7) *}
      Ann {* ATPG untestable                  AU        667 *}
      Ann {*   atpg_untestable-not_detected   AN       (667) *}
      Ann {* Not detected                     ND        223 *}
      Ann {*   not-controlled                 NC         (2) *}
      Ann {*   not-observed                   NO       (221) *}
      Ann {* ----------------------------------------------- *}
      Ann {* total faults                              2102 *}
      Ann {* test coverage                            56.91% *}
      Ann {* fault coverage                           56.40% *}
      Ann {* ATPG effectiveness                       89.08% *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {*            Pattern Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* #internal patterns                          58 *}
      Ann {*     #fast_sequential patterns               58 *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {* rule  severity  #fails  description *}
      Ann {* ----  --------  ------  --------------------------------- *}
      Ann {* N20   warning        1  underspecified UDP *}
      Ann {* B10   warning       14  unconnected module internal net *}
      Ann {* V14   warning        1  missing state *}
      Ann {*  *}
      Ann {* clock_name        off  usage *}
      Ann {* ----------------  ---  -------------------------- *}
      Ann {* CLOCK              0   master shift  *}
      Ann {* RESET              0    *}
      Ann {*  *}
      Ann {* port_name         constraint_value *}
      Ann {* ----------------  --------------- *}
      Ann {* RESET               0 *}
      Ann {* test_se             0 *}
      Ann {*  *}
      Ann {* There are no equivalent pins *}
      Ann {* There are no net connections *}
      Ann {* Unified STIL Flow *}
      Ann {* serial_flag = 1 *}
   }
}
Signals {
   "RESTART" In;
      "AVERAGE" In;
      "ENABLE" In;
      "DATA_IN[7]" In;
      "DATA_IN[6]" In;
      "DATA_IN[5]" In;
   "DATA_IN[4]" In;
      "DATA_IN[3]" In;
      "DATA_IN[2]" In;
      "DATA_IN[1]" In;
      "DATA_IN[0]" In;
   "RESET" In;
      "CLOCK" In;
      "test_si1" In { ScanIn; } "test_si2" In { ScanIn; } "test_se" In;
   "DATA_OUT[7]" Out;
      "DATA_OUT[6]" Out;
      "DATA_OUT[5]" Out;
      "DATA_OUT[4]" Out;
      "DATA_OUT[3]" Out;
   "DATA_OUT[2]" Out;
      "DATA_OUT[1]" Out;
      "DATA_OUT[0]" Out;
      "test_so1" Out { ScanOut;
   } "test_so2" Out { ScanOut; }
}
SignalGroups {
   "_pi" = '"AVERAGE" + "CLOCK" + "DATA_IN[0]" + "DATA_IN[1]" + "DATA_IN[2]" +
   "DATA_IN[3]" + "DATA_IN[4]" + "DATA_IN[5]" + "DATA_IN[6]" + "DATA_IN[7]" +
   "ENABLE" + "RESET" + "RESTART" + "test_si1" + "test_si2" + "test_se"'; // #signals=16
   "_in" = '"RESTART" + "AVERAGE" + "ENABLE" + "DATA_IN[7]" + "DATA_IN[6]" +
   "DATA_IN[5]" + "DATA_IN[4]" + "DATA_IN[3]" + "DATA_IN[2]" + "DATA_IN[1]" +
   "DATA_IN[0]" + "RESET" + "CLOCK" + "test_si1" + "test_si2" + "test_se"'; // #signals=16
   "all_inputs" = '"AVERAGE" + "CLOCK" + "DATA_IN[0]" + "DATA_IN[1]" +
   "DATA_IN[2]" + "DATA_IN[3]" + "DATA_IN[4]" + "DATA_IN[5]" + "DATA_IN[6]" +
   "DATA_IN[7]" + "ENABLE" + "RESET" + "RESTART" + "test_si1" + "test_si2" +
   "test_se"'; // #signals=16
   "_po" = '"DATA_OUT[0]" + "DATA_OUT[1]" + "DATA_OUT[2]" + "DATA_OUT[3]" +
   "DATA_OUT[4]" + "DATA_OUT[5]" + "DATA_OUT[6]" + "DATA_OUT[7]" + "test_so1" +
   "test_so2"'; // #signals=10
   "_si" = '"test_si1" + "test_si2"' { ScanIn; } // #signals=2
   "all_outputs" = '"DATA_OUT[0]" + "DATA_OUT[1]" + "DATA_OUT[2]" +
   "DATA_OUT[3]" + "DATA_OUT[4]" + "DATA_OUT[5]" + "DATA_OUT[6]" + "DATA_OUT[7]" +
   "test_so1" + "test_so2"'; // #signals=10
   "all_ports" = '"all_inputs" + "all_outputs"'; // #signals=26
   "_clk" = '"CLOCK" + "RESET"'; // #signals=2
   "_so" = '"test_so1" + "test_so2"' { ScanOut; } // #signals=2
   "_out" = '"DATA_OUT[7]" + "DATA_OUT[6]" + "DATA_OUT[5]" + "DATA_OUT[4]" +
   "DATA_OUT[3]" + "DATA_OUT[2]" + "DATA_OUT[1]" + "DATA_OUT[0]" + "test_so1" +
   "test_so2"'; // #signals=10
}
Timing {
   WaveformTable "_allclock_launch_capture_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "CLOCK" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "RESET" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
   WaveformTable "_multiclock_capture_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "CLOCK" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "RESET" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
   WaveformTable "_allclock_launch_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "CLOCK" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "RESET" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
   WaveformTable "_allclock_capture_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "CLOCK" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "RESET" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
   WaveformTable "_default_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "CLOCK" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "RESET" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
}
ScanStructures {
   ScanChain "1" {
      ScanLength 33;
      ScanIn "test_si1";
      ScanOut "test_so1";
      ScanInversion 0;
      ScanCells "b04.DATA_OUT_reg_0_.SI" "b04.DATA_OUT_reg_1_.SI" "b04.DATA_OUT_reg_2_.SI" 
      "b04.DATA_OUT_reg_3_.SI" "b04.DATA_OUT_reg_4_.SI" "b04.DATA_OUT_reg_5_.SI" 
      "b04.DATA_OUT_reg_6_.SI" "b04.DATA_OUT_reg_7_.SI" "b04.REG1_reg_0_.SI" "b04.REG1_reg_1_.SI" 
      "b04.REG1_reg_2_.SI" "b04.REG1_reg_3_.SI" "b04.REG1_reg_4_.SI" "b04.REG1_reg_5_.SI" 
      "b04.REG1_reg_6_.SI" "b04.REG1_reg_7_.SI" "b04.REG2_reg_0_.SI" "b04.REG2_reg_1_.SI" 
      "b04.REG2_reg_2_.SI" "b04.REG2_reg_3_.SI" "b04.REG2_reg_4_.SI" "b04.REG2_reg_5_.SI" 
      "b04.REG2_reg_6_.SI" "b04.REG2_reg_7_.SI" "b04.REG3_reg_0_.SI" "b04.REG3_reg_1_.SI" 
      "b04.REG3_reg_2_.SI" "b04.REG3_reg_3_.SI" "b04.REG3_reg_4_.SI" "b04.REG3_reg_5_.SI" 
      "b04.REG3_reg_6_.SI" "b04.REG3_reg_7_.SI" "b04.REG4_reg_0_.SI" ;
      ScanMasterClock "CLOCK" ;
   }
   ScanChain "2" {
      ScanLength 33;
      ScanIn "test_si2";
      ScanOut "test_so2";
      ScanInversion 0;
      ScanCells "b04.REG4_reg_1_.SI" "b04.REG4_reg_2_.SI" "b04.REG4_reg_3_.SI" "b04.REG4_reg_4_.SI" 
      "b04.REG4_reg_5_.SI" "b04.REG4_reg_6_.SI" "b04.REG4_reg_7_.SI" "b04.RLAST_reg_0_.SI" 
      "b04.RLAST_reg_1_.SI" "b04.RLAST_reg_2_.SI" "b04.RLAST_reg_3_.SI" "b04.RLAST_reg_4_.SI" 
      "b04.RLAST_reg_5_.SI" "b04.RLAST_reg_6_.SI" "b04.RLAST_reg_7_.SI" "b04.RMAX_reg_0_.SI" 
      "b04.RMAX_reg_1_.SI" "b04.RMAX_reg_2_.SI" "b04.RMAX_reg_3_.SI" "b04.RMAX_reg_4_.SI" 
      "b04.RMAX_reg_5_.SI" "b04.RMAX_reg_6_.SI" "b04.RMAX_reg_7_.SI" "b04.RMIN_reg_0_.SI" 
      "b04.RMIN_reg_1_.SI" "b04.RMIN_reg_2_.SI" "b04.RMIN_reg_3_.SI" "b04.RMIN_reg_4_.SI" 
      "b04.RMIN_reg_5_.SI" "b04.RMIN_reg_6_.SI" "b04.RMIN_reg_7_.SI" "b04.stato_reg_0_.SI" 
      "b04.stato_reg_1_.SI" ;
      ScanMasterClock "CLOCK" ;
   }
}
PatternBurst "_burst_" {
   PatList { "_pattern_" {
   }
}}
PatternExec {
   PatternBurst "_burst_";
}
Procedures {
   "multiclock_capture" {
      W "_multiclock_capture_WFT_";
      F { "RESET"=0;
      "test_se"=0; }
      C { "all_inputs"=N0\r9 N 0NNNN;
      "all_outputs"=\r10 X ; }
      V { "_pi"=\r16 # ;
      "_po"=\r10 # ; }
   }
   "allclock_capture" {
      W "_allclock_capture_WFT_";
      F { "RESET"=0;
      "test_se"=0; }
      C { "all_inputs"=N0\r9 N 0NNNN;
      "all_outputs"=\r10 X ; }
      V { "_pi"=\r16 # ;
      "_po"=\r10 # ; }
   }
   "allclock_launch" {
      W "_allclock_launch_WFT_";
      F { "RESET"=0;
      "test_se"=0; }
      C { "all_inputs"=N0\r9 N 0NNNN;
      "all_outputs"=\r10 X ; }
      V { "_pi"=\r16 # ;
      "_po"=\r10 # ; }
   }
   "allclock_launch_capture" {
      W "_allclock_launch_capture_WFT_";
      F { "RESET"=0;
      "test_se"=0; }
      C { "all_inputs"=N0\r9 N 0NNNN;
      "all_outputs"=\r10 X ; }
      V { "_pi"=\r16 # ;
      "_po"=\r10 # ; }
   }
   "load_unload" {
      W "_default_WFT_";
      C { "all_inputs"=N0\r9 N 0NNNN;
      "all_outputs"=\r10 X ; }
      "Internal_scan_pre_shift": V { "test_se"=1; }
      Shift {          W "_default_WFT_";
         V { "_clk"=P0;
      "_si"=##;
      "_so"=##; }
      }
   }
}
MacroDefs {
   "test_setup" {
      W "_default_WFT_";
      C { "all_inputs"=\r16 N ;
      "all_outputs"=\r10 X ; }
      V { "CLOCK"=0;
      "RESET"=0; }
      V { "test_se"=0; }
   }
}
Pattern "_pattern_" {
   W "_multiclock_capture_WFT_";
   "precondition all Signals": C { "_pi"=\r16 0 ;
      "_po"=\r10 X ; }
   Macro "test_setup";
   Ann {* fast_sequential *}
   "pattern 0": Call "load_unload" { 
      "test_si1=100101000010101101011111101010110;
      "test_si2=110010101111111001001010010000000; }
   Call "multiclock_capture" { 
      "_pi"=1011111111101110; }
   Call "allclock_launch" { 
      "_pi"=1P11111111101110; }
   Call "allclock_capture" { 
      "_pi"=1P11111111101110;
      "_po"=XXXXXXXXXL; }
   Ann {* fast_sequential *}
   "pattern 1": Call "load_unload" { 
      "test_so1"=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX;
      "test_so2"=LHXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX; 
      "test_si1=111111111111111111111111111111111;
      "test_si2=001100110011001010111111111111111; }
   Call "multiclock_capture" { 
      "_pi"=1010001100101110; }
   Call "allclock_launch" { 
      "_pi"=1P10001100101110; }
   Call "allclock_capture" { 
      "_pi"=1P10001100101110;
      "_po"=HHHHHHHHHL; }
   Ann {* fast_sequential *}
   "pattern 2": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL;
      "test_so2"=HLLLHHLLLHLLHHLLLHLLLLLLLLLLLLLLL; 
      "test_si1=011111000000001110111100001100011;
      "test_si2=100101100001100111010011001001001; }
   Call "multiclock_capture" { 
      "_pi"=1011100101101110; }
   Call "allclock_launch" { 
      "_pi"=1P11100101101110; }
   Call "allclock_capture" { 
      "_pi"=1P11100101101110;
      "_po"=HHHHHLLLLH; }
   Ann {* fast_sequential *}
   "pattern 3": Call "load_unload" { 
      "test_so1"=HLHHHHLLLHLHLLHHHHLHLLHHHLLLLLHHH;
      "test_so2"=HLHLHLLHHHLHHLLHHHXXXXXXXXLLLLLHH; 
      "test_si1=010101110010111111110110011100000;
      "test_si2=001011101111111101011000101100111; }
   Call "multiclock_capture" { 
      "_pi"=1001000000101110; }
   Call "allclock_launch" { 
      "_pi"=1P01000000101110; }
   Call "allclock_capture" { 
      "_pi"=1P01000000101110;
      "_po"=XXXXXXXXXL; }
   Ann {* fast_sequential *}
   "pattern 4": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL;
      "test_so2"=HLLLLLLLHLLLLLLLHLLLLLLLLLLLLLLLL; 
      "test_si1=100011110000100001000011110101110;
      "test_si2=010010100110010111000100101001110; }
   Call "multiclock_capture" { 
      "_pi"=0000110110100110; }
   Call "allclock_launch" { 
      "_pi"=0P00110110100110; }
   Call "allclock_capture" { 
      "_pi"=0P00110110100110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 5": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLLHHLHHLLLLHHLHHL;
      "test_so2"=HLLHHLHHLLLHHLHHLLLHHLHHLLLLLLLLL; 
      "test_si1=000011101010100000000110000101110;
      "test_si2=011011010010110100001110110001011; }
   Call "multiclock_capture" { 
      "_pi"=1011001010101110; }
   Call "allclock_launch" { 
      "_pi"=1P11001010101110; }
   Call "allclock_capture" { 
      "_pi"=1P11001010101110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 6": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLLHLHLLHHLLLHLLHH;
      "test_so2"=HLLHLHLLHHLHLHLLHHLHLHLLHHLLLLLLL; 
      "test_si1=100000000011110001000011110110101;
      "test_si2=100010000000101011010011101011100; }
   Call "multiclock_capture" { 
      "_pi"=0011011000100110; }
   Call "allclock_launch" { 
      "_pi"=0P11011000100110; }
   Call "allclock_capture" { 
      "_pi"=0P11011000100110;
      "_po"=LHLHLHLLLH; }
   Ann {* fast_sequential *}
   "pattern 7": Call "load_unload" { 
      "test_so1"=LHLLLLHHHLLLHHLHHLLLHHLHHLLLLHHLH;
      "test_so2"=HLLLLHHLHHLLHXXXXXLLLHHLHHLHHHHLL; 
      "test_si1=001010111100010100001111011011011;
      "test_si2=010000001010000011000111010011000; }
   Call "multiclock_capture" { 
      "_pi"=1011011110100110; }
   Call "allclock_launch" { 
      "_pi"=1P11011110100110; }
   Call "allclock_capture" { 
      "_pi"=1P11011110100110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 8": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLLHHHHLHHLLLLLLLL;
      "test_so2"=HLLHHHHLHHLHHHHLHHLHHHHLHHLLLLLLL; 
      "test_si1=111110101101000100101101101011101;
      "test_si2=100001001111110011101101010000010; }
   Call "multiclock_capture" { 
      "_pi"=0010100000100110; }
   Call "allclock_launch" { 
      "_pi"=0P10100000100110; }
   Call "allclock_capture" { 
      "_pi"=0P10100000100110;
      "_po"=HLHLLLLLHH; }
   Ann {* fast_sequential *}
   "pattern 9": Call "load_unload" { 
      "test_so1"=LLXXXXXHXLLLLLHLHLLLLLHLHLLHHHHLH;
      "test_so2"=HLXXXXXXXXLLLLLHLHLLLLLHLHHXXXXLX; 
      "test_si1=011011101010001001000110110111000;
      "test_si2=010111011100000100111010011111100; }
   Call "multiclock_capture" { 
      "_pi"=1011000001101110; }
   Call "allclock_launch" { 
      "_pi"=1P11000001101110; }
   Call "allclock_capture" { 
      "_pi"=1P11000001101110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 10": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHLLLLLHHLLLLLLHH;
      "test_so2"=HLHLLLLLHHHLLLLLHHHLLLLLHHLLLLLLL; 
      "test_si1=100000010111011001010110111111110;
      "test_si2=100001000110010110000100001110110; }
   Call "multiclock_capture" { 
      "_pi"=1010000110101110; }
   Call "allclock_launch" { 
      "_pi"=1P10000110101110; }
   Call "allclock_capture" { 
      "_pi"=1P10000110101110;
      "_po"=HHXLXXLLXH; }
   Ann {* fast_sequential *}
   "pattern 11": Call "load_unload" { 
      "test_so1"=XXXXXXXXXLHHLLLLHLHHLLLLHLLHHHXLH;
      "test_so2"=HLLLLHXLLHLHHLLLLHXXXXXXXXHXXXXXL; 
      "test_si1=000101110110111111110110010101010;
      "test_si2=101101101100011000101111111011110; }
   Call "multiclock_capture" { 
      "_pi"=1010111010101110; }
   Call "allclock_launch" { 
      "_pi"=1P10111010101110; }
   Call "allclock_capture" { 
      "_pi"=1P10111010101110;
      "_po"=HLXXXHLLXH; }
   Ann {* fast_sequential *}
   "pattern 12": Call "load_unload" { 
      "test_so1"=XXXXXXXXXLHLXXHLHLHLXXHLHLLLXXXLL;
      "test_so2"=HLHHLHHLHHXXXXXXXXXXXXXXXXXXXXXXX; 
      "test_si1=011011100011111101101001010010100;
      "test_si2=101000100011100001001100010101101; }
   Call "multiclock_capture" { 
      "_pi"=1000010000101110; }
   Call "allclock_launch" { 
      "_pi"=1P00010000101110; }
   Call "allclock_capture" { 
      "_pi"=1P00010000101110;
      "_po"=XXXXXHLLXH; }
   Ann {* fast_sequential *}
   "pattern 13": Call "load_unload" { 
      "test_so1"=XXXXXXXXXLLLLHLLLLLLLHLLLLLLLHLLL;
      "test_so2"=HLHLLLHLLLLLLLHLLLXXXXXXXXXXXXXXX; 
      "test_si1=011001101101010101000010101101100;
      "test_si2=011000101101010010000111011011111; }
   Call "multiclock_capture" { 
      "_pi"=0000000001101110; }
   Call "allclock_launch" { 
      "_pi"=0P00000001101110; }
   Call "allclock_capture" { 
      "_pi"=0P00000001101110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 14": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL;
      "test_so2"=HLHLLLLLLLHLLLLLLLHLLLLLLLLLLLLLL; 
      "test_si1=111010111110101011111000000011111;
      "test_si2=010000000011000000001111110011101; }
   Call "multiclock_capture" { 
      "_pi"=1001100011001110; }
   Call "allclock_launch" { 
      "_pi"=1P01100011001110; }
   Call "allclock_capture" { 
      "_pi"=1P01100011001110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 15": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHXLLLHHLLLXLLHHL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=001010010110101111111111110000111;
      "test_si2=010110001010110110010100000000001; }
   Call "multiclock_capture" { 
      "_pi"=0010100011101110; }
   Call "allclock_launch" { 
      "_pi"=0P10100011101110; }
   Call "allclock_capture" { 
      "_pi"=0P10100011101110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 16": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHHLLLHLHLLLLLHLH;
      "test_so2"=HLHHLLLHLHHHLLLHLHHHLLLHLHLLLLLLL; 
      "test_si1=100110100101001111101001101010110;
      "test_si2=100001000110101001100011000111101; }
   Call "multiclock_capture" { 
      "_pi"=0000101110101110; }
   Call "allclock_launch" { 
      "_pi"=0P00101110101110; }
   Call "allclock_capture" { 
      "_pi"=0P00101110101110;
      "_po"=XXXXXXXLXH; }
   Ann {* fast_sequential *}
   "pattern 17": Call "load_unload" { 
      "test_so1"=XXXXXXXXXLXXXLXLLLXXXLXLLLLXXXLXL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLXXXLXLLXXXXXXX; 
      "test_si1=010000101000011100010101011100101;
      "test_si2=011010010010101010000111011010100; }
   Call "multiclock_capture" { 
      "_pi"=1011101100101110; }
   Call "allclock_launch" { 
      "_pi"=1P11101100101110; }
   Call "allclock_capture" { 
      "_pi"=1P11101100101110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 18": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLLLHHLHHHLLXXXXXX;
      "test_so2"=HLLLHHLHHHLLHHLHHHLLXXLXXXLLLLLLL; 
      "test_si1=110001111100011010110001101000011;
      "test_si2=100011100110111000101011101001001; }
   Call "multiclock_capture" { 
      "_pi"=1001101000101110; }
   Call "allclock_launch" { 
      "_pi"=1P01101000101110; }
   Call "allclock_capture" { 
      "_pi"=1P01101000101110;
      "_po"=XXXXXXXXXH; }
   Ann {* fast_sequential *}
   "pattern 19": Call "load_unload" { 
      "test_so1"=XXXXXXXXXLLLHLHHLLLLHLHHLXXXXXXXX;
      "test_so2"=HLLLLHLHHLLLLHLHHLXXXXXXXXXXXXXXX; 
      "test_si1=101010111010101110011101100001001;
      "test_si2=100011111010000000010011000011111; }
   Call "multiclock_capture" { 
      "_pi"=1010111100101110; }
   Call "allclock_launch" { 
      "_pi"=1P10111100101110; }
   Call "allclock_capture" { 
      "_pi"=1P10111100101110;
      "_po"=XXXXXXXXXH; }
   Ann {* fast_sequential *}
   "pattern 20": Call "load_unload" { 
      "test_so1"=XXXXXXXXXLLHHHHLHLLHHHHLHXXXXXXXX;
      "test_so2"=HLLLHHHHLHLLHHHHLHXXXXXXXXXXXXXXX; 
      "test_si1=001100110101100001000000101100001;
      "test_si2=001001110001111001110111101101100; }
   Call "multiclock_capture" { 
      "_pi"=1011111111101110; }
   Call "allclock_launch" { 
      "_pi"=1P11111111101110; }
   Call "allclock_capture" { 
      "_pi"=1P11111111101110;
      "_po"=XXXXXXXXXL; }
   Ann {* fast_sequential *}
   "pattern 21": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL;
      "test_so2"=HLXXXXXHXXXXXXXHXXLLLLLLLLLLLLLLL; 
      "test_si1=111111010000100001010000000000111;
      "test_si2=001011110000111101001100100101101; }
   Call "multiclock_capture" { 
      "_pi"=1011011111101110; }
   Call "allclock_launch" { 
      "_pi"=1P11011111101110; }
   Call "allclock_capture" { 
      "_pi"=1P11011111101110;
      "_po"=XXXXXXXXXL; }
   Ann {* fast_sequential *}
   "pattern 22": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL;
      "test_so2"=HLHXXXXLXXHXXXXLXXLLLLLLLLLLLLLLL; 
      "test_si1=100000111101101111101100100011101;
      "test_si2=100111111110000000010111011010001; }
   Call "multiclock_capture" { 
      "_pi"=1001011110101110; }
   Call "allclock_launch" { 
      "_pi"=1P01011110101110; }
   Call "allclock_capture" { 
      "_pi"=1P01011110101110;
      "_po"=XXXXXXXXXH; }
   Ann {* fast_sequential *}
   "pattern 23": Call "load_unload" { 
      "test_so1"=XXXXXXXXXLHHHHLHLLHHHHLHLXXXXXXXX;
      "test_so2"=HLLHHHHLHLLHHHHLHLXXXXXXXXXXXXXXX; 
      "test_si1=000101000011111010110000000110011;
      "test_si2=000000000100000111110111011011101; }
   Call "multiclock_capture" { 
      "_pi"=1011111111001110; }
   Call "allclock_launch" { 
      "_pi"=1P11111111001110; }
   Call "allclock_capture" { 
      "_pi"=1P11111111001110;
      "_po"=XXXXXXXXXL; }
   Ann {* fast_sequential *}
   "pattern 24": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL;
      "test_so2"=HLHHHHHHHXHHHHHHHXLLLLLLLLLLLLLLL; 
      "test_si1=010100000011010011110011100001110;
      "test_si2=010001101110011111110101101111110; }
   Call "multiclock_capture" { 
      "_pi"=1011101111100110; }
   Call "allclock_launch" { 
      "_pi"=1P11101111100110; }
   Call "allclock_capture" { 
      "_pi"=1P11101111100110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 25": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHHHHLHHHLLLLLLLL;
      "test_so2"=HLHHHHLHHHHHHHLHHHHHHHLHHHLLLLLLL; 
      "test_si1=111011100110111001000101110010011;
      "test_si2=100111011101111110101110000010001; }
   Call "multiclock_capture" { 
      "_pi"=1011010111100110; }
   Call "allclock_launch" { 
      "_pi"=1P11010111100110; }
   Call "allclock_capture" { 
      "_pi"=1P11010111100110;
      "_po"=HHLLLHLLLH; }
   Ann {* fast_sequential *}
   "pattern 26": Call "load_unload" { 
      "test_so1"=XXLLXXXXXHHHLHLHHHHHLHLHHHHLHHHLL;
      "test_so2"=HLHHHLHLHHLHHXHHXXHHHLHLHHXXXXXXX; 
      "test_si1=011000101011000010101000100101010;
      "test_si2=101000000010000000100001011011011; }
   Call "multiclock_capture" { 
      "_pi"=1000000100101110; }
   Call "allclock_launch" { 
      "_pi"=1P00000100101110; }
   Call "allclock_capture" { 
      "_pi"=1P00000100101110;
      "_po"=LLLLLLLLXH; }
   Ann {* fast_sequential *}
   "pattern 27": Call "load_unload" { 
      "test_so1"=XXXXXXXXHLLHLLLLLLLHLLLLLLLLHLLLL;
      "test_so2"=HLHLLLLLLLLLHLLLLLXXXXXXXXXXXXXXX; 
      "test_si1=000000111100000110010110000100000;
      "test_si2=101000000010000000100110110011110; }
   Call "multiclock_capture" { 
      "_pi"=1010101100101110; }
   Call "allclock_launch" { 
      "_pi"=1P10101100101110; }
   Call "allclock_capture" { 
      "_pi"=1P10101100101110;
      "_po"=LLLLLLLLXH; }
   Ann {* fast_sequential *}
   "pattern 28": Call "load_unload" { 
      "test_so1"=XXXXXXXXXLLHHLHLHLLHHLHLHLLLHHLHL;
      "test_so2"=HLHLLLLLLLLLHHLHLHXXXXXXXXXXXXXXX; 
      "test_si1=110110101111110100110001101000110;
      "test_si2=100111000110001010100001000101111; }
   Call "multiclock_capture" { 
      "_pi"=1011011010101110; }
   Call "allclock_launch" { 
      "_pi"=1P11011010101110; }
   Call "allclock_capture" { 
      "_pi"=1P11011010101110;
      "_po"=XXXXXXLLXH; }
   Ann {* fast_sequential *}
   "pattern 29": Call "load_unload" { 
      "test_so1"=XXXHXXXXXLHLHXLHHLHLHXLHHLLXLLXHL;
      "test_so2"=HLXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX; 
      "test_si1=111101110100110010011001010110101;
      "test_si2=010100000001000000101100000000001; }
   Call "multiclock_capture" { 
      "_pi"=1001010111101110; }
   Call "allclock_launch" { 
      "_pi"=1P01010111101110; }
   Call "allclock_capture" { 
      "_pi"=1P01010111101110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 30": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHHHLHLHLLLHLHLHL;
      "test_so2"=HLHHHLHLHLHHHLHLHLXXXLXLXLLLLLLLL; 
      "test_si1=000001011010001100011000100110001;
      "test_si2=011010010111001101110110000100010; }
   Call "multiclock_capture" { 
      "_pi"=1011011110001110; }
   Call "allclock_launch" { 
      "_pi"=1P11011110001110; }
   Call "allclock_capture" { 
      "_pi"=1P11011110001110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 31": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLLXXHHLXXLLXXHLXX;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=010110011110110000010001110010110;
      "test_si2=010101101010000101110000101010100; }
   Call "multiclock_capture" { 
      "_pi"=1000011011001110; }
   Call "allclock_launch" { 
      "_pi"=1P00011011001110; }
   Call "allclock_capture" { 
      "_pi"=1P00011011001110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 32": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHXLHHLLLLLXHHLLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=111000001010101101000111011001010;
      "test_si2=011100100101101001011010111110111; }
   Call "multiclock_capture" { 
      "_pi"=1000000001001110; }
   Call "allclock_launch" { 
      "_pi"=1P00000001001110; }
   Call "allclock_capture" { 
      "_pi"=1P00000001001110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 33": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL;
      "test_so2"=HLHLLLLLLLHLLLLLLLLLLLLLLLLLLLLLL; 
      "test_si1=001001000100000011100101101100110;
      "test_si2=010010000101100101011101000101000; }
   Call "multiclock_capture" { 
      "_pi"=1011111111001110; }
   Call "allclock_launch" { 
      "_pi"=1P11111111001110; }
   Call "allclock_capture" { 
      "_pi"=1P11111111001110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 34": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLXXXXXXXXXXXXXXXX;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=101100010110101100010110110010101;
      "test_si2=011000100000100011110111110111111; }
   Call "multiclock_capture" { 
      "_pi"=1000100111001110; }
   Call "allclock_launch" { 
      "_pi"=1P00100111001110; }
   Call "allclock_capture" { 
      "_pi"=1P00100111001110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 35": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHXXLLHLLLLXXLHLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=000010011011011011010000000001100;
      "test_si2=010101001101010010011011000001011; }
   Call "multiclock_capture" { 
      "_pi"=1011111111001110; }
   Call "allclock_launch" { 
      "_pi"=1P11111111001110; }
   Call "allclock_capture" { 
      "_pi"=1P11111111001110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 36": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLXXXXXXXXXXXXXXXX;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=110011001110100001001111110110011;
      "test_si2=011011001011000010001000110001111; }
   Call "multiclock_capture" { 
      "_pi"=1000110111001110; }
   Call "allclock_launch" { 
      "_pi"=1P00110111001110; }
   Call "allclock_capture" { 
      "_pi"=1P00110111001110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 37": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHXXLHHLLLLXXHHLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=110001010100011011011111001110001;
      "test_si2=010000001100001010110100110110000; }
   Call "multiclock_capture" { 
      "_pi"=1000001011001110; }
   Call "allclock_launch" { 
      "_pi"=1P00001011001110; }
   Call "allclock_capture" { 
      "_pi"=1P00001011001110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 38": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHXLHLLLLLLXHLLLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=100001010110110111011110010010010;
      "test_si2=010011111001011000101111010010010; }
   Call "multiclock_capture" { 
      "_pi"=1011111110000110; }
   Call "allclock_launch" { 
      "_pi"=1P11111110000110; }
   Call "allclock_capture" { 
      "_pi"=1P11111110000110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 39": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLLXXXXXXXLLLLLLLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=110001111100100001100011001000001;
      "test_si2=010000111011110110100110011111011; }
   Call "multiclock_capture" { 
      "_pi"=1011111111100110; }
   Call "allclock_launch" { 
      "_pi"=1P11111111100110; }
   Call "allclock_capture" { 
      "_pi"=1P11111111100110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 40": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLXXXXXXXXLLLLLLLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXXXXXXXXXLLLLLLL; 
      "test_si1=100001110110010100000100001001101;
      "test_si2=010010011111000001110111111001111; }
   Call "multiclock_capture" { 
      "_pi"=1011111111000110; }
   Call "allclock_launch" { 
      "_pi"=1P11111111000110; }
   Call "allclock_capture" { 
      "_pi"=1P11111111000110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 41": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLXXXXXXXXLLLLLLLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=010001100010011111101101001101011;
      "test_si2=011110010111010110001001001111011; }
   Call "multiclock_capture" { 
      "_pi"=1011111111100110; }
   Call "allclock_launch" { 
      "_pi"=1P11111111100110; }
   Call "allclock_capture" { 
      "_pi"=1P11111111100110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 42": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLXXXXXXXXLLLLLLLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXXXXXXXXXLLLLLLL; 
      "test_si1=100011111011011001001000000011011;
      "test_si2=010001001001010000101110110110101; }
   Call "multiclock_capture" { 
      "_pi"=1011111111000110; }
   Call "allclock_launch" { 
      "_pi"=1P11111111000110; }
   Call "allclock_capture" { 
      "_pi"=1P11111111000110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 43": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLXXXXXXXXLLLLLLLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=000110011000010110011101000001000;
      "test_si2=100000100011011000011001100000110; }
   Call "multiclock_capture" { 
      "_pi"=1011111111100110; }
   Call "allclock_launch" { 
      "_pi"=1P11111111100110; }
   Call "allclock_capture" { 
      "_pi"=1P11111111100110;
      "_po"=LLHXXLXXHH; }
   Ann {* fast_sequential *}
   "pattern 44": Call "load_unload" { 
      "test_so1"=XXXXXXXXXXXXXXXXXXXXXXXXXXXHXXLHH;
      "test_so2"=HLXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX; 
      "test_si1=100100000001010010111110001101000;
      "test_si2=011111100010010100010101101101110; }
   Call "multiclock_capture" { 
      "_pi"=1011110111000110; }
   Call "allclock_launch" { 
      "_pi"=1P11110111000110; }
   Call "allclock_capture" { 
      "_pi"=1P11110111000110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 45": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLXXXLXXXXLLLLLLLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=011110000010100110101101111001010;
      "test_si2=010110011010110111001111111011110; }
   Call "multiclock_capture" { 
      "_pi"=1011101111000110; }
   Call "allclock_launch" { 
      "_pi"=1P11101111000110; }
   Call "allclock_capture" { 
      "_pi"=1P11101111000110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 46": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLXXXXLXXXLLLLLLLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=011000111011011010100111011010110;
      "test_si2=011101001000001000001001011010010; }
   Call "multiclock_capture" { 
      "_pi"=1011111111000110; }
   Call "allclock_launch" { 
      "_pi"=1P11111111000110; }
   Call "allclock_capture" { 
      "_pi"=1P11111111000110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 47": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLXXXXXXXXLLLLLLLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=100010110110011110001001110010011;
      "test_si2=011010100101101001011000110110110; }
   Call "multiclock_capture" { 
      "_pi"=1010111111000110; }
   Call "allclock_launch" { 
      "_pi"=1P10111111000110; }
   Call "allclock_capture" { 
      "_pi"=1P10111111000110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 48": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLXXXXXXLXLLLLLLLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=101100010000000101100011000101001;
      "test_si2=010000011111000101101001111111001; }
   Call "multiclock_capture" { 
      "_pi"=1011111111000110; }
   Call "allclock_launch" { 
      "_pi"=1P11111111000110; }
   Call "allclock_capture" { 
      "_pi"=1P11111111000110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 49": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLXXXXXXXXLLLLLLLL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLLLLLLLL; 
      "test_si1=011010000000011111111000100000101;
      "test_si2=100110110000000000011000000100010; }
   Call "multiclock_capture" { 
      "_pi"=1010011011101110; }
   Call "allclock_launch" { 
      "_pi"=1P10011011101110; }
   Call "allclock_capture" { 
      "_pi"=1P10011011101110;
      "_po"=XXXXXXLLXH; }
   Ann {* fast_sequential *}
   "pattern 50": Call "load_unload" { 
      "test_so1"=XXXXXXXXXHXLXXLLHHXLXXLLHLLXXXXXL;
      "test_so2"=HLXXXXXXXXLLXLLXLLXXXXXXXXXXXXXXX; 
      "test_si1=011111001111100101110110011001100;
      "test_si2=010110110111011001001000011001010; }
   Call "multiclock_capture" { 
      "_pi"=0000000011100110; }
   Call "allclock_launch" { 
      "_pi"=0P00000011100110; }
   Call "allclock_capture" { 
      "_pi"=0P00000011100110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 51": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHHLLLLLLLLHLLLLL;
      "test_so2"=HLHHLLLLLLHHLLLLLLHHLLLLLLLLLLLLL; 
      "test_si1=011101001010001101010001101010001;
      "test_si2=010100000010000000111111110000011; }
   Call "multiclock_capture" { 
      "_pi"=0000000001101110; }
   Call "allclock_launch" { 
      "_pi"=0P00000001101110; }
   Call "allclock_capture" { 
      "_pi"=0P00000001101110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 52": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLL;
      "test_so2"=HLHLLLLLLLHLLLLLLLHLLLLLLLLLLLLLL; 
      "test_si1=011000111000111000100111010001011;
      "test_si2=101010010010100101011011110011010; }
   Call "multiclock_capture" { 
      "_pi"=0000110000100110; }
   Call "allclock_launch" { 
      "_pi"=0P00110000100110; }
   Call "allclock_capture" { 
      "_pi"=0P00110000100110;
      "_po"=LLLLLXXXHH; }
   Ann {* fast_sequential *}
   "pattern 53": Call "load_unload" { 
      "test_so1"=XXXXXXXXXLLLLHHLLLLLLHHLLLLHLHLLH;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLHHLLXXXXXXX; 
      "test_si1=010101100001000110010100011000000;
      "test_si2=101001100000010011101101010000000; }
   Call "multiclock_capture" { 
      "_pi"=0000000000100110; }
   Call "allclock_launch" { 
      "_pi"=0P00000000100110; }
   Call "allclock_capture" { 
      "_pi"=0P00000000100110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 54": Call "load_unload" { 
      "test_so1"=XXXXXXXXXLLLLLLLLLLLLLLLLLLLHLHHL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLLLLLLLXXXXXXX; 
      "test_si1=011110110101010110111010000000011;
      "test_si2=011001000010010001010110010100100; }
   Call "multiclock_capture" { 
      "_pi"=1000000111101110; }
   Call "allclock_launch" { 
      "_pi"=1P00000111101110; }
   Call "allclock_capture" { 
      "_pi"=1P00000111101110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 55": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLHHHLLLLLLLHLLLLL;
      "test_so2"=HLHHHLLLLLHHHLLLLLXXXLLLLLLLLLLLL; 
      "test_si1=110100000110000011001110100100111;
      "test_si2=011101111101000100000011001111011; }
   Call "multiclock_capture" { 
      "_pi"=0010111100100110; }
   Call "allclock_launch" { 
      "_pi"=0P10111100100110; }
   Call "allclock_capture" { 
      "_pi"=0P10111100100110;
      "_po"=LLLLLLLLLH; }
   Ann {* fast_sequential *}
   "pattern 56": Call "load_unload" { 
      "test_so1"=LLLLLLLLLLLLLLLLLLLXXXXLXLLLXXXXL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLLXXXXLXLLLLLLL; 
      "test_si1=000010111011110000110101000111111;
      "test_si2=101110010101000101011100000010010; }
   Call "multiclock_capture" { 
      "_pi"=0010111110100110; }
   Call "allclock_launch" { 
      "_pi"=0P10111110100110; }
   Call "allclock_capture" { 
      "_pi"=0P10111110100110;
      "_po"=XXXXXXLLHH; }
   Ann {* fast_sequential *}
   "pattern 57": Call "load_unload" { 
      "test_so1"=XXXXXXXXXLXXXXXLHLXXXXXLHLLXXXXXL;
      "test_so2"=HLXXXXXXXXXXXXXXXXLXXXXXLHXXXXXXX; 
      "test_si1=111000010100100111010001100001001;
      "test_si2=100000000101111101000000000011101; }
   Call "multiclock_capture" { 
      "_pi"=1000111101101110; }
   Call "allclock_launch" { 
      "_pi"=1P00111101101110; }
   Call "allclock_capture" { 
      "_pi"=1P00111101101110;
      "_po"=XXXXXXLLXH; }
   Ann {* fast_sequential *}
   "end 57 unload": Call "load_unload" { 
      "test_so1"=XXXXXXXXXHLXHXHLLHLXHXHLLLLXXXXLL;
      "test_so2"=HLXXXXXXXXLHHXHHLHXXXXXXXXXXXXXXX; }
}
